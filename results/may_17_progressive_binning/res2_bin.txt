model: ExtraTreesClassifier(max_features=None, n_estimators=1000, n_jobs=4)
[2022-05-10 17:14:06,007][INFO] [GET] [currentuser] CURRENT USER - 534530561 : mamodei | 200 OK
[2022-05-10 17:14:06,531][INFO] [GET] [sliceinstance collection] 12 objects | 200 OK
[2022-05-10 17:14:06,875][INFO] [GET] [annotation collection] 192 objects | 200 OK
[2022-05-10 17:14:06,989][INFO] [GET] [imageinstance] 545025783 : Adjusted Cytomine MSI 3103/Region013-Grayscale-stacked.ome.tif | 200 OK
[2022-05-10 17:14:07,128][INFO] [GET] [term collection] 35 objects | 200 OK
terms: ['SC positive AREA', 'SC negative AREA']
current_width=52.5
list(zip(bin_lo, bin_hi))=[(100.0, 152.5), (152.5, 205.0), (205.0, 257.5), (257.5, 310.0), (310.0, 362.5), (362.5, 415.0), (415.0, 467.5), (467.5, 520.0), (520.0, 572.5), (572.5, 625.0), (625.0, 677.5), (677.5, 730.0), (730.0, 782.5), (782.5, 835.0), (835.0, 887.5), (887.5, 940.0), (940.0, 992.5), (992.5, 1045.0), (1045.0, 1097.5), (1097.5, 1150.0)]
checking for class imbalance:
occurrences=array([110,  74])
np.max(occurrences / n_items) = 0.5978
np.min(occurrences / n_items) = 0.4022
. . . . . . . . 1 / n_classes = 0.5000
imbalance = 0.598
1.5 * imbalance = 0.897
np.min(cv_scores) = 0.368
np.mean(cv_scores) = 0.561
np.median(cv_scores) = 0.528
np.max(cv_scores) = 0.789
current_width=26.25
list(zip(bin_lo, bin_hi))=[(520.0, 546.25), (546.25, 572.5), (467.5, 493.75), (493.75, 520.0), (1097.5, 1123.75), (1123.75, 1150.0), (940.0, 966.25), (966.25, 992.5), (362.5, 388.75), (388.75, 415.0), (887.5, 913.75), (913.75, 940.0), (625.0, 651.25), (651.25, 677.5), (572.5, 598.75), (598.75, 625.0), (415.0, 441.25), (441.25, 467.5), (677.5, 703.75), (703.75, 730.0)]
checking for class imbalance:
occurrences=array([110,  74])
np.max(occurrences / n_items) = 0.5978
np.min(occurrences / n_items) = 0.4022
. . . . . . . . 1 / n_classes = 0.5000
imbalance = 0.598
1.5 * imbalance = 0.897
np.min(cv_scores) = 0.368
np.mean(cv_scores) = 0.539
np.median(cv_scores) = 0.579
np.max(cv_scores) = 0.611
current_width=13.125
list(zip(bin_lo, bin_hi))=[(598.75, 611.875), (611.875, 625.0), (493.75, 506.875), (506.875, 520.0), (362.5, 375.625), (375.625, 388.75), (572.5, 585.625), (585.625, 598.75), (520.0, 533.125), (533.125, 546.25), (703.75, 716.875), (716.875, 730.0), (651.25, 664.375), (664.375, 677.5), (887.5, 900.625), (900.625, 913.75), (677.5, 690.625), (690.625, 703.75), (415.0, 428.125), (428.125, 441.25)]
checking for class imbalance:
occurrences=array([110,  74])
np.max(occurrences / n_items) = 0.5978
np.min(occurrences / n_items) = 0.4022
. . . . . . . . 1 / n_classes = 0.5000
imbalance = 0.598
1.5 * imbalance = 0.897
np.min(cv_scores) = 0.368
np.mean(cv_scores) = 0.544
np.median(cv_scores) = 0.528
np.max(cv_scores) = 0.895
current_width=6.5625
list(zip(bin_lo, bin_hi))=[(415.0, 421.5625), (421.5625, 428.125), (520.0, 526.5625), (526.5625, 533.125), (375.625, 382.1875), (382.1875, 388.75), (690.625, 697.1875), (697.1875, 703.75), (900.625, 907.1875), (907.1875, 913.75), (362.5, 369.0625), (369.0625, 375.625), (651.25, 657.8125), (657.8125, 664.375), (703.75, 710.3125), (710.3125, 716.875), (677.5, 684.0625), (684.0625, 690.625), (428.125, 434.6875), (434.6875, 441.25)]
checking for class imbalance:
occurrences=array([110,  74])
np.max(occurrences / n_items) = 0.5978
np.min(occurrences / n_items) = 0.4022
. . . . . . . . 1 / n_classes = 0.5000
imbalance = 0.598
1.5 * imbalance = 0.897
np.min(cv_scores) = 0.368
np.mean(cv_scores) = 0.593
np.median(cv_scores) = 0.639
np.max(cv_scores) = 0.737
current_width=3.28125
list(zip(bin_lo, bin_hi))=[(520.0, 523.28125), (523.28125, 526.5625), (677.5, 680.78125), (680.78125, 684.0625), (428.125, 431.40625), (431.40625, 434.6875), (657.8125, 661.09375), (661.09375, 664.375), (703.75, 707.03125), (707.03125, 710.3125), (684.0625, 687.34375), (687.34375, 690.625), (907.1875, 910.46875), (910.46875, 913.75), (434.6875, 437.96875), (437.96875, 441.25), (421.5625, 424.84375), (424.84375, 428.125), (710.3125, 713.59375), (713.59375, 716.875)]
checking for class imbalance:
occurrences=array([110,  74])
np.max(occurrences / n_items) = 0.5978
np.min(occurrences / n_items) = 0.4022
. . . . . . . . 1 / n_classes = 0.5000
imbalance = 0.598
1.5 * imbalance = 0.897
np.min(cv_scores) = 0.474
np.mean(cv_scores) = 0.620
np.median(cv_scores) = 0.611
np.max(cv_scores) = 0.789
current_width=1.640625
list(zip(bin_lo, bin_hi))=[(657.8125, 659.453125), (659.453125, 661.09375), (661.09375, 662.734375), (662.734375, 664.375), (907.1875, 908.828125), (908.828125, 910.46875), (431.40625, 433.046875), (433.046875, 434.6875), (684.0625, 685.703125), (685.703125, 687.34375), (437.96875, 439.609375), (439.609375, 441.25), (703.75, 705.390625), (705.390625, 707.03125), (428.125, 429.765625), (429.765625, 431.40625), (421.5625, 423.203125), (423.203125, 424.84375), (434.6875, 436.328125), (436.328125, 437.96875)]
checking for class imbalance:
occurrences=array([110,  74])
np.max(occurrences / n_items) = 0.5978
np.min(occurrences / n_items) = 0.4022
. . . . . . . . 1 / n_classes = 0.5000
imbalance = 0.598
1.5 * imbalance = 0.897
np.min(cv_scores) = 0.421
np.mean(cv_scores) = 0.625
np.median(cv_scores) = 0.611
np.max(cv_scores) = 0.789
Done!
list(zip(bin_lo, bin_hi))=[(423.203125, 424.0234375), (424.0234375, 424.84375), (434.6875, 435.5078125), (435.5078125, 436.328125), (429.765625, 430.5859375), (430.5859375, 431.40625), (421.5625, 422.3828125), (422.3828125, 423.203125), (428.125, 428.9453125), (428.9453125, 429.765625), (703.75, 704.5703125), (704.5703125, 705.390625), (433.046875, 433.8671875), (433.8671875, 434.6875), (684.0625, 684.8828125), (684.8828125, 685.703125), (436.328125, 437.1484375), (437.1484375, 437.96875), (437.96875, 438.7890625), (438.7890625, 439.609375)]
