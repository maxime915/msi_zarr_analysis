model: ExtraTreesClassifier(max_features=None, n_estimators=1000, n_jobs=4)
[2022-05-10 17:14:06,003][INFO] [GET] [currentuser] CURRENT USER - 534530561 : mamodei | 200 OK
[2022-05-10 17:14:06,538][INFO] [GET] [sliceinstance collection] 12 objects | 200 OK
[2022-05-10 17:14:06,830][INFO] [GET] [annotation collection] 156 objects | 200 OK
[2022-05-10 17:14:06,951][INFO] [GET] [imageinstance] 545025783 : Adjusted Cytomine MSI 3103/Region013-Grayscale-stacked.ome.tif | 200 OK
[2022-05-10 17:14:07,102][INFO] [GET] [term collection] 35 objects | 200 OK
terms: ['LivingStrata negative AREA', 'SC negative AREA']
current_width=52.5
list(zip(bin_lo, bin_hi))=[(100.0, 152.5), (152.5, 205.0), (205.0, 257.5), (257.5, 310.0), (310.0, 362.5), (362.5, 415.0), (415.0, 467.5), (467.5, 520.0), (520.0, 572.5), (572.5, 625.0), (625.0, 677.5), (677.5, 730.0), (730.0, 782.5), (782.5, 835.0), (835.0, 887.5), (887.5, 940.0), (940.0, 992.5), (992.5, 1045.0), (1045.0, 1097.5), (1097.5, 1150.0)]
checking for class imbalance:
occurrences=array([77, 74])
np.max(occurrences / n_items) = 0.5099
np.min(occurrences / n_items) = 0.4901
. . . . . . . . 1 / n_classes = 0.5000
imbalance = 0.510
1.5 * imbalance = 0.765
np.min(cv_scores) = 0.533
np.mean(cv_scores) = 0.840
np.median(cv_scores) = 0.867
np.max(cv_scores) = 1.000
current_width=26.25
list(zip(bin_lo, bin_hi))=[(100.0, 126.25), (126.25, 152.5), (940.0, 966.25), (966.25, 992.5), (467.5, 493.75), (493.75, 520.0), (205.0, 231.25), (231.25, 257.5), (415.0, 441.25), (441.25, 467.5), (835.0, 861.25), (861.25, 887.5), (520.0, 546.25), (546.25, 572.5), (677.5, 703.75), (703.75, 730.0), (782.5, 808.75), (808.75, 835.0), (730.0, 756.25), (756.25, 782.5)]
checking for class imbalance:
occurrences=array([77, 74])
np.max(occurrences / n_items) = 0.5099
np.min(occurrences / n_items) = 0.4901
. . . . . . . . 1 / n_classes = 0.5000
imbalance = 0.510
1.5 * imbalance = 0.765
np.min(cv_scores) = 0.667
np.mean(cv_scores) = 0.867
np.median(cv_scores) = 0.867
np.max(cv_scores) = 1.000
current_width=13.125
list(zip(bin_lo, bin_hi))=[(126.25, 139.375), (139.375, 152.5), (861.25, 874.375), (874.375, 887.5), (415.0, 428.125), (428.125, 441.25), (493.75, 506.875), (506.875, 520.0), (703.75, 716.875), (716.875, 730.0), (782.5, 795.625), (795.625, 808.75), (756.25, 769.375), (769.375, 782.5), (520.0, 533.125), (533.125, 546.25), (730.0, 743.125), (743.125, 756.25), (808.75, 821.875), (821.875, 835.0)]
checking for class imbalance:
occurrences=array([77, 74])
np.max(occurrences / n_items) = 0.5099
np.min(occurrences / n_items) = 0.4901
. . . . . . . . 1 / n_classes = 0.5000
imbalance = 0.510
1.5 * imbalance = 0.765
np.min(cv_scores) = 0.733
np.mean(cv_scores) = 0.887
np.median(cv_scores) = 0.933
np.max(cv_scores) = 1.000
current_width=6.5625
list(zip(bin_lo, bin_hi))=[(493.75, 500.3125), (500.3125, 506.875), (703.75, 710.3125), (710.3125, 716.875), (743.125, 749.6875), (749.6875, 756.25), (756.25, 762.8125), (762.8125, 769.375), (782.5, 789.0625), (789.0625, 795.625), (795.625, 802.1875), (802.1875, 808.75), (808.75, 815.3125), (815.3125, 821.875), (520.0, 526.5625), (526.5625, 533.125), (769.375, 775.9375), (775.9375, 782.5), (730.0, 736.5625), (736.5625, 743.125)]
checking for class imbalance:
occurrences=array([77, 74])
np.max(occurrences / n_items) = 0.5099
np.min(occurrences / n_items) = 0.4901
. . . . . . . . 1 / n_classes = 0.5000
imbalance = 0.510
1.5 * imbalance = 0.765
np.min(cv_scores) = 0.667
np.mean(cv_scores) = 0.880
np.median(cv_scores) = 0.933
np.max(cv_scores) = 1.000
current_width=3.28125
list(zip(bin_lo, bin_hi))=[(808.75, 812.03125), (812.03125, 815.3125), (782.5, 785.78125), (785.78125, 789.0625), (749.6875, 752.96875), (752.96875, 756.25), (789.0625, 792.34375), (792.34375, 795.625), (743.125, 746.40625), (746.40625, 749.6875), (703.75, 707.03125), (707.03125, 710.3125), (802.1875, 805.46875), (805.46875, 808.75), (730.0, 733.28125), (733.28125, 736.5625), (520.0, 523.28125), (523.28125, 526.5625), (775.9375, 779.21875), (779.21875, 782.5)]
checking for class imbalance:
occurrences=array([77, 74])
np.max(occurrences / n_items) = 0.5099
np.min(occurrences / n_items) = 0.4901
. . . . . . . . 1 / n_classes = 0.5000
imbalance = 0.510
1.5 * imbalance = 0.765
np.min(cv_scores) = 0.667
np.mean(cv_scores) = 0.887
np.median(cv_scores) = 0.933
np.max(cv_scores) = 1.000
current_width=1.640625
list(zip(bin_lo, bin_hi))=[(523.28125, 524.921875), (524.921875, 526.5625), (782.5, 784.140625), (784.140625, 785.78125), (703.75, 705.390625), (705.390625, 707.03125), (746.40625, 748.046875), (748.046875, 749.6875), (789.0625, 790.703125), (790.703125, 792.34375), (779.21875, 780.859375), (780.859375, 782.5), (733.28125, 734.921875), (734.921875, 736.5625), (805.46875, 807.109375), (807.109375, 808.75), (520.0, 521.640625), (521.640625, 523.28125), (730.0, 731.640625), (731.640625, 733.28125)]
checking for class imbalance:
occurrences=array([77, 74])
np.max(occurrences / n_items) = 0.5099
np.min(occurrences / n_items) = 0.4901
. . . . . . . . 1 / n_classes = 0.5000
imbalance = 0.510
1.5 * imbalance = 0.765
np.min(cv_scores) = 0.667
np.mean(cv_scores) = 0.860
np.median(cv_scores) = 0.867
np.max(cv_scores) = 1.000
Done!
list(zip(bin_lo, bin_hi))=[(523.28125, 524.1015625), (524.1015625, 524.921875), (789.0625, 789.8828125), (789.8828125, 790.703125), (782.5, 783.3203125), (783.3203125, 784.140625), (779.21875, 780.0390625), (780.0390625, 780.859375), (780.859375, 781.6796875), (781.6796875, 782.5), (733.28125, 734.1015625), (734.1015625, 734.921875), (521.640625, 522.4609375), (522.4609375, 523.28125), (807.109375, 807.9296875), (807.9296875, 808.75), (730.0, 730.8203125), (730.8203125, 731.640625), (731.640625, 732.4609375), (732.4609375, 733.28125)]
